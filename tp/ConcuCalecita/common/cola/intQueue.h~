#ifndef INTQUEUE_H
#define INTQUEUE_H

#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>

using namespace std;

class intQueue{

	public:
		// constructor
		intQueue(const char* path,int mode);	

		// destructor
		~intQueue();	

		// agrega un elemento a la cola
		void push(int data) const;

		// retorna el primer elemento de la cola
		int pop() const;

		// destruye la cola para todos los procesos
		void eliminar() const;

	private:
		std::string nombre;
		int fd;

};

// constructor
intQueue::intQueue(const char* path,int mode){
	mknod(path,S_IFIFO|0666,0);
	fd = open(path,mode);
}

// destructor
intQueue::~intQueue(){
	close(fd);
	fd = -1;
}

// agrega un elemento a la cola
void intQueue::push(int data) const{
	write(fd,(void*)(&data),sizeof(int));
}

// retorna el primer elemento de la cola
int intQueue::pop() const{
	int valor;
	read(fd,(void*)(&valor),sizeof(int));
	return valor;
}

// destruye la cola para todos los procesos
void intQueue::eliminar() const {
	unlink(nombre.c_str());
}

#endif

















